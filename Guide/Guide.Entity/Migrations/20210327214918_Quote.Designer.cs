// <auto-generated />
using System;
using Guide.Entity.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Guide.Entity.Migrations
{
    [DbContext(typeof(GuideContext))]
    [Migration("20210327214918_Quote")]
    partial class Quote
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Guide.Entity.Entity.CurrentTradingPeriodEntity", b =>
                {
                    b.Property<int>("CurrentTradingPeriodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("End")
                        .HasColumnType("int");

                    b.Property<int>("Gmtoffset")
                        .HasColumnType("int");

                    b.Property<int>("IdFinance")
                        .HasColumnType("int");

                    b.Property<int>("Start")
                        .HasColumnType("int");

                    b.Property<string>("Timezone")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(30)");

                    b.HasKey("CurrentTradingPeriodId");

                    b.HasIndex("IdFinance");

                    b.ToTable("CurrentTradingPeriod");
                });

            modelBuilder.Entity("Guide.Entity.Entity.FinanceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ChartPreviousClose")
                        .HasColumnType("decimal");

                    b.Property<string>("Currency")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("DataGranularity")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("ExchangeName")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("ExchangeTimezoneName")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("FirstTradeDate")
                        .HasColumnType("int");

                    b.Property<int>("Gmtoffset")
                        .HasColumnType("int");

                    b.Property<string>("InstrumentType")
                        .HasColumnType("varchar(15)");

                    b.Property<decimal>("PreviousClose")
                        .HasColumnType("decimal");

                    b.Property<int>("PriceHint")
                        .HasColumnType("int");

                    b.Property<string>("Range")
                        .HasColumnType("varchar(3)");

                    b.Property<decimal>("RegularMarketPrice")
                        .HasColumnType("decimal");

                    b.Property<int>("RegularMarketTime")
                        .HasColumnType("int");

                    b.Property<int>("Scale")
                        .HasColumnType("int");

                    b.Property<string>("Symbol")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Timezone")
                        .HasColumnType("varchar(5)");

                    b.HasKey("Id");

                    b.ToTable("Finance");
                });

            modelBuilder.Entity("Guide.Entity.Entity.QuoteIndicatorEntity", b =>
                {
                    b.Property<int>("QuoteIndicatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdFinance")
                        .HasColumnType("int");

                    b.Property<decimal?>("QuoteClose")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QuoteHigh")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QuoteLow")
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QuoteOpen")
                        .HasColumnType("decimal");

                    b.Property<int?>("TimestampMeta")
                        .HasColumnType("int");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("decimal");

                    b.HasKey("QuoteIndicatorId");

                    b.HasIndex("IdFinance");

                    b.ToTable("QuoteIndicator");
                });

            modelBuilder.Entity("Guide.Entity.Entity.CurrentTradingPeriodEntity", b =>
                {
                    b.HasOne("Guide.Entity.Entity.FinanceEntity", "Finance")
                        .WithMany("CurrentTradingPeriodEntities")
                        .HasForeignKey("IdFinance")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Finance");
                });

            modelBuilder.Entity("Guide.Entity.Entity.QuoteIndicatorEntity", b =>
                {
                    b.HasOne("Guide.Entity.Entity.FinanceEntity", "Finance")
                        .WithMany("QuoteIndicatorsEntities")
                        .HasForeignKey("IdFinance")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Finance");
                });

            modelBuilder.Entity("Guide.Entity.Entity.FinanceEntity", b =>
                {
                    b.Navigation("CurrentTradingPeriodEntities");

                    b.Navigation("QuoteIndicatorsEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
